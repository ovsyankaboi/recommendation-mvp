from logging.config import fileConfig
import os, sys
from logging.config import fileConfig
from sqlalchemy import engine_from_config, pool
from alembic import context

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É app/ –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', 'app')))

# (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –∑–∞–≥—Ä—É–∑–∫–∞ .env
from dotenv import load_dotenv
load_dotenv()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º metadata –≤–∞—à–µ–π –º–æ–¥–µ–ª–∏
import models
target_metadata = models.Base.metadata

# –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
config = context.config
# –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –±—Ä–∞—Ç—å URL –∏–∑ .env:
config.set_main_option('sqlalchemy.url', os.getenv('DATABASE_URL', config.get_main_option('sqlalchemy.url')))
fileConfig(config.config_file_name)

from sqlalchemy import engine_from_config, pool
from alembic import context

# üëá –¥–æ–±–∞–≤–ª–µ–Ω–æ
from dotenv import load_dotenv
import os
load_dotenv()

from app import models  # üëà –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–≤–æ–∏—Ö –º–æ–¥–µ–ª–µ–π

# –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Alembic
config = context.config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
if config.config_file_name is not None:
    fileConfig(config.config_file_name)

# üëá –ó–¥–µ—Å—å —É–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ç–≤–æ–∏—Ö –º–æ–¥–µ–ª–µ–π
target_metadata = models.Base.metadata

# URL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DATABASE_URL = os.getenv('DATABASE_URL')

def run_migrations_offline() -> None:
    context.configure(
        url=DATABASE_URL,  # üëà –∏—Å–ø–æ–ª—å–∑—É–µ–º DATABASE_URL –∏–∑ .env
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
    )

    with context.begin_transaction():
        context.run_migrations()

def run_migrations_online() -> None:
    configuration = config.get_section(config.config_ini_section, {})
    configuration["sqlalchemy.url"] = DATABASE_URL  # üëà –∏—Å–ø–æ–ª—å–∑—É–µ–º DATABASE_URL

    connectable = engine_from_config(
        configuration,
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(
            connection=connection, target_metadata=target_metadata
        )

        with context.begin_transaction():
            context.run_migrations()

if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
